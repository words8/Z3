(define-fun f ((y0 Int)) Bool
  (exists ((result Int))
   (and
     (exists ((z0 Int) (x0 Int) (y1 Int) (x1 Int)) 
       (and
         (= z0 y0)
         (and
           (= y1 x0)
           (and 
             (= x1 z0)
             (= result (* x1 x1))
           )
         )
       )
     ) 
     (= result (* y0 y0)))
   ) 
)
(declare-const a Int)
(assert (not (f a)) )
(check-sat)